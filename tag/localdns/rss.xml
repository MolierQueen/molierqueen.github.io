<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Molier • Posts by &#34;localdns&#34; tag</title>
        <link>https://oliverqueen.cn</link>
        <description>iOS 开发 移动App 博客 杂谈 随笔 相册</description>
        <language>zh-CN</language>
        <pubDate>Tue, 23 Jan 2018 18:02:29 +0800</pubDate>
        <lastBuildDate>Tue, 23 Jan 2018 18:02:29 +0800</lastBuildDate>
        <category>欢迎页</category>
        <category>网络</category>
        <category>底层</category>
        <category>DNS解析</category>
        <category>LocalDNS</category>
        <category>OpenGL</category>
        <category>UI</category>
        <category>动画</category>
        <category>性能优化</category>
        <category>xcode</category>
        <category>cocoapods</category>
        <category>podfile</category>
        <category>webview</category>
        <category>hook</category>
        <category>runtime</category>
        <category>翻译</category>
        <category>优化</category>
        <category>国外文献</category>
        <category>httpdns</category>
        <category>Cocoapods</category>
        <category>架构</category>
        <category>AlertView</category>
        <category>Hook</category>
        <category>杂谈</category>
        <category>Hexo</category>
        <category>个人博客</category>
        <category>网站</category>
        <category>屏幕适配</category>
        <category>iOS 11</category>
        <category>评论插件</category>
        <category>总结</category>
        <category>回味2017展望2018</category>
        <category>热修复</category>
        <category>JSPath</category>
        <category>swift</category>
        <category>网络请求</category>
        <category>Swift</category>
        <category>音频</category>
        <category>唱吧</category>
        <category>K歌</category>
        <category>AVFoundation</category>
        <category>git</category>
        <category>效率工作</category>
        <category>回首2018展望2019</category>
        <category>代码版本控制</category>
        <category>iOS</category>
        <category>Crash防护</category>
        <category>Apple登录</category>
        <category>WWDC2022</category>
        <category>逆向</category>
        <category>算法</category>
        <category>C语言</category>
        <category>排序</category>
        <item>
            <guid isPermalink="true">https://oliverqueen.cn/2018-01-23-IOS%E4%B8%8B%E4%B8%89%E7%A7%8DDNS%E8%A7%A3%E6%9E%90%E6%96%B9%E5%BC%8F%E5%88%86%E6%9E%90%EF%BC%88LocalDns%EF%BC%89/</guid>
            <title>IOS下三种DNS解析方式分析（LocalDns）</title>
            <link>https://oliverqueen.cn/2018-01-23-IOS%E4%B8%8B%E4%B8%89%E7%A7%8DDNS%E8%A7%A3%E6%9E%90%E6%96%B9%E5%BC%8F%E5%88%86%E6%9E%90%EF%BC%88LocalDns%EF%BC%89/</link>
            <category>DNS解析</category>
            <category>LocalDNS</category>
            <pubDate>Tue, 23 Jan 2018 18:02:29 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;/assets/css/APlayer.min.css&#34;&gt;&lt;script src=&#34;/assets/js/APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;背景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h3&gt;
&lt;p&gt;最近在做 iOS 的 DNS 解析，顺便研究了下 iOS 端本地的 DNS 解析方式（localDNS）, 也就是不依赖 Http 请求，而是用原始的 API 进行解析，虽然有 HttpDNS 但是考虑到成本、第三方服务稳定性的问题，LocalDNS 仍然是一个很重要的部分，在 iOS 系统下，localDNS 的解析方式有三种，下面主要对三种方式进行下利弊分析及简单的原理介绍。&lt;/p&gt;
&lt;h3 id=&#34;方式一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方式一&#34;&gt;#&lt;/a&gt; 方式一&lt;/h3&gt;
&lt;p&gt;这个也是我一开始在项目中使用的方式。&lt;br /&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;：&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;hostent&lt;/span&gt;	*&lt;span class=&#34;built_in&#34;&gt;gethostbyname&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;：&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;hostent&lt;/span&gt;	*&lt;span class=&#34;built_in&#34;&gt;gethostbyname2&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 两个函数作用完全一样，返回值一样，但是第一个只能用于 IPV4 的网络环境，而第二个则 IPV4 和 IPV6 都可使用，可以通过第二个参数传入当前的网络环境。&lt;br /&gt;
&lt;!---more---&gt;&lt;/p&gt;
&lt;h6 id=&#34;使用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方式&#34;&gt;#&lt;/a&gt; 使用方式：&lt;/h6&gt;
&lt;p&gt;&lt;figure class=&#34;highlight objectivec&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;CFAbsoluteTime&lt;/span&gt; start = &lt;span class=&#34;built_in&#34;&gt;CFAbsoluteTimeGetCurrent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;   *ptr, **pptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; hostent *hptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;   str[&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ptr = &lt;span class=&#34;string&#34;&gt;&amp;quot;www.meitu.com&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;NSMutableArray&lt;/span&gt; * ips = [&lt;span class=&#34;built_in&#34;&gt;NSMutableArray&lt;/span&gt; array];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;((hptr = gethostbyname(ptr)) == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(pptr=hptr-&amp;gt;h_addr_list; *pptr!=&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;; pptr++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;NSString&lt;/span&gt; * ipStr = [&lt;span class=&#34;built_in&#34;&gt;NSString&lt;/span&gt; stringWithCString:inet_ntop(hptr-&amp;gt;h_addrtype, *pptr, str, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(str)) encoding:&lt;span class=&#34;built_in&#34;&gt;NSUTF8StringEncoding&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [ips addObject:ipStr?:&lt;span class=&#34;string&#34;&gt;@&amp;quot;&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;CFAbsoluteTime&lt;/span&gt; end = &lt;span class=&#34;built_in&#34;&gt;CFAbsoluteTimeGetCurrent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;NSLog&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;@&amp;quot;22222 === ip === %@ === time cost: %0.3fs&amp;quot;&lt;/span&gt;, ips,end - start);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用 gethostbyname 方法后会得到一个 struct, 也就是上文的 struct hostent *hptr：&lt;br /&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;hostent&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;	*h_name;	&lt;span class=&#34;comment&#34;&gt;/* official name of host */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;	**h_aliases;	&lt;span class=&#34;comment&#34;&gt;/* alias list */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;	h_addrtype;	&lt;span class=&#34;comment&#34;&gt;/* host address type */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;	h_length;	&lt;span class=&#34;comment&#34;&gt;/* length of address */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;	**h_addr_list;	&lt;span class=&#34;comment&#34;&gt;/* list of addresses from name server */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; !defined(_POSIX_C_SOURCE) || defined(_DARWIN_C_SOURCE)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt;	h_addr	h_addr_list[0]	&lt;span class=&#34;comment&#34;&gt;/* address, for backward compatibility */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* (!_POSIX_C_SOURCE || _DARWIN_C_SOURCE) */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&#34;参数解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数解析&#34;&gt;#&lt;/a&gt; 参数解析：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;hostent-&amp;gt;h_name&lt;br /&gt;
 表示的是主机的规范名。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3ctdWMwZXA5NmIuYmFpZHUueG4tLWNvbXd3dy1rcDJqNzRvZXN1NDJ5NjAzYjJsNWFnbXMuYS5zaGlmZW4uY29t&#34;&gt;例如 www.baidu.com 的规范名其实是 www.a.shifen.com&lt;/span&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hostent-&amp;gt;h_aliases&lt;br /&gt;
 表示的是主机的别名 www.baidu.com 的别名就是他自己。有的时候，有的主机可能有好几个别名，这些，其实都是为了易于用户记忆而为自己的网站多取的名字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hostent-&amp;gt;h_addrtype&lt;br /&gt;
 表示的是主机 ip 地址的类型，到底是 ipv4 (AF_INET)，还是 pv6 (AF_INET6)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hostent-&amp;gt;h_length&lt;br /&gt;
 表示的是主机 ip 地址的长度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hostent-&amp;gt;h_addr_lisst&lt;br /&gt;
 表示的是主机的 ip 地址，注意，这个是以网络字节序存储的。不要直接用 printf 带 % s 参数来打这个东西，会有问题的哇。所以到真正需要打印出这个 IP 的话，需要调用 &lt;code&gt;const char *inet_ntop(int af, const void *src, char *dst, socklen_t cnt) &lt;/code&gt; ，来把它转成 char。详细使用见上文&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺点&#34;&gt;#&lt;/a&gt; 缺点：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在进行网络切换的时候小概率卡死，自测十次有一两次左右。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在本地的 LocalDns 被破坏的时候会必卡死 30 秒，然后返回 nil 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缓存是个玄学东西，他会对自己解析出来的 IP 进行缓存（可能是运营商缓存）缓存时间不确定，有可能我即使切换了无数个网络，但是从早到晚同一个域名总是解析出同样的 IP，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网上说的比较多的问题&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.cdnjson.com/tvax3.sinaimg.cn/large/006tNc79gy1fo6myoq10ej30po01w0tb.jpg&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;方式二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方式二&#34;&gt;#&lt;/a&gt; 方式二&lt;/h3&gt;
&lt;p&gt;除了经常用到的 gethostbyname (3) 和 gethostbyaddr (3) 函数以外，Linux (以及其它 UNIX/UNIX-like 系统) 还提供了一套用于在底层处理 DNS 相关问题的函数 (这里所说的底层仅是相对 gethostbyname 和 gethostbyaddr 两个函数而言). 这套函数被称为地址解析函数 (resolver functions)。曾经尝试过这个方式...&lt;br /&gt;
&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;		res_query &lt;span class=&#34;constructor&#34;&gt;__P((&lt;span class=&#34;params&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;u_char&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;int&lt;/span&gt;)&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;函数原型为：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; res&lt;span class=&#34;constructor&#34;&gt;_query(&lt;span class=&#34;params&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;dname&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;class&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;type&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;answer&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;anslen&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 这个方式需要在项目中添加 &lt;code&gt;libresolv.tbd&lt;/code&gt;  库，因为要依赖于库中的函数去解析。 &lt;code&gt;res_query&lt;/code&gt;  用来发出一个指定类 (由参数 class 指定) 和类型 (由参数 type 指定) 的 DNS 询问. dname 是要查询的主机名。返回信息被存储在 answser 指向的内存区域中。信息的长度不能大于 anslen 个字节。这个函数会创建一个 DNS 查询报文并把它发送到指定的 DNS 服务器。&lt;/p&gt;
&lt;h6 id=&#34;使用方式-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方式-2&#34;&gt;#&lt;/a&gt; 使用方式&lt;/h6&gt;
&lt;p&gt;&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;CFAbsoluteTime start = &lt;span class=&#34;constructor&#34;&gt;CFAbsoluteTimeGetCurrent()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    unsigned &lt;span class=&#34;built_in&#34;&gt;char&lt;/span&gt; auResult&lt;span class=&#34;literal&#34;&gt;[&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; nBytesRead = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nBytesRead = res&lt;span class=&#34;constructor&#34;&gt;_query(&lt;span class=&#34;string&#34;&gt;&amp;quot;www.meitu.com&amp;quot;&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;ns_c_in&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;ns_t_a&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;auResult&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;auResult&lt;/span&gt;)&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ns_msg handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ns&lt;span class=&#34;constructor&#34;&gt;_initparse(&lt;span class=&#34;params&#34;&gt;auResult&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;nBytesRead&lt;/span&gt;, &amp;amp;&lt;span class=&#34;params&#34;&gt;handle&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NSMutableArray *ipList = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; msg_count = ns&lt;span class=&#34;constructor&#34;&gt;_msg_count(&lt;span class=&#34;params&#34;&gt;handle&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;ns_s_an&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (msg_count &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ipList = &lt;span class=&#34;literal&#34;&gt;[[NSM&lt;span class=&#34;identifier&#34;&gt;utableArray&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;alloc&lt;/span&gt;]&lt;/span&gt; initWithCapacity:msg_count];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; rrnum = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; rrnum &amp;lt; msg_count; rrnum++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ns_rr rr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ns&lt;span class=&#34;constructor&#34;&gt;_parserr(&amp;amp;&lt;span class=&#34;params&#34;&gt;handle&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;ns_s_an&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;rrnum&lt;/span&gt;, &amp;amp;&lt;span class=&#34;params&#34;&gt;rr&lt;/span&gt;)&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt; == &lt;/span&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;char&lt;/span&gt; ip1&lt;span class=&#34;literal&#34;&gt;[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                strcpy(ip1, inet&lt;span class=&#34;constructor&#34;&gt;_ntoa(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;in_addr&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;)&lt;/span&gt;ns&lt;span class=&#34;constructor&#34;&gt;_rr_rdata(&lt;span class=&#34;params&#34;&gt;rr&lt;/span&gt;)&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                NSString *ipString = &lt;span class=&#34;literal&#34;&gt;[[NSS&lt;span class=&#34;identifier&#34;&gt;tring&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;alloc&lt;/span&gt;]&lt;/span&gt; initWithCString:ip1 encoding:NSASCIIStringEncoding];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;literal&#34;&gt;[&lt;span class=&#34;identifier&#34;&gt;ipString&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;isEqualToString&lt;/span&gt;:@&amp;quot;&amp;quot;]&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;//将提取到的IP地址放到数组中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;literal&#34;&gt;[&lt;span class=&#34;identifier&#34;&gt;ipList&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;addObject&lt;/span&gt;:&lt;span class=&#34;identifier&#34;&gt;ipString&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CFAbsoluteTime &lt;span class=&#34;keyword&#34;&gt;end&lt;/span&gt; = &lt;span class=&#34;constructor&#34;&gt;CFAbsoluteTimeGetCurrent()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;constructor&#34;&gt;NSLog(@&lt;span class=&#34;string&#34;&gt;&amp;quot;11111 === ip === %@ === time cost: %0.3fs&amp;quot;&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;ipList&lt;/span&gt;,&lt;span class=&#34;params&#34;&gt;end&lt;/span&gt; - &lt;span class=&#34;params&#34;&gt;start&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&#34;参数解析-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数解析-2&#34;&gt;#&lt;/a&gt; 参数解析&lt;/h6&gt;
&lt;p&gt;由于该逻辑是 Linux 底层提供的代码，苹果用宏做了一次封装，具体的函数含义还需要对 Linux 内核的理解，这里放一篇&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcmVuaGFvL2FyY2hpdmUvMjAxMS8xMS8xNC8yMjQ4NTI4Lmh0bWw=&#34;&gt;参考资料&lt;/span&gt;&lt;/p&gt;
&lt;h6 id=&#34;优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点&#34;&gt;#&lt;/a&gt; 优点：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;在 LocalDns 被破坏掉的情况下能及时响应不会延迟。&lt;/li&gt;
&lt;li&gt;没有缓存，缓存由开发者控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;缺点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺点-2&#34;&gt;#&lt;/a&gt; 缺点&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;在进行网络切换时候 3G/4G 切 wify 高概率出现卡死&lt;br /&gt;
这一个缺点是比较致命的，所以没有再继续使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;方式三&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方式三&#34;&gt;#&lt;/a&gt; 方式三&lt;/h3&gt;
&lt;p&gt;苹果原生的 DNS 解析&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight objectivec&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Boolean &lt;span class=&#34;built_in&#34;&gt;CFHostStartInfoResolution&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;CFHostRef&lt;/span&gt; theHost, &lt;span class=&#34;built_in&#34;&gt;CFHostInfoType&lt;/span&gt; info, &lt;span class=&#34;built_in&#34;&gt;CFStreamError&lt;/span&gt; *error);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&#34;使用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方法&#34;&gt;#&lt;/a&gt; 使用方法：&lt;/h6&gt;
&lt;p&gt;&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Boolean result,bResolved;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CFHostRef hostRef;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CFArrayRef addresses = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NSMutableArray&lt;span class=&#34;operator&#34;&gt; * &lt;/span&gt;ipsArr = &lt;span class=&#34;literal&#34;&gt;[[NSM&lt;span class=&#34;identifier&#34;&gt;utableArray&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;alloc&lt;/span&gt;]&lt;/span&gt; init];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CFStringRef hostNameRef = &lt;span class=&#34;constructor&#34;&gt;CFStringCreateWithCString(&lt;span class=&#34;params&#34;&gt;kCFAllocatorDefault&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;www.meitu.com&amp;quot;&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;kCFStringEncodingASCII&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hostRef = &lt;span class=&#34;constructor&#34;&gt;CFHostCreateWithName(&lt;span class=&#34;params&#34;&gt;kCFAllocatorDefault&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;hostNameRef&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CFAbsoluteTime start = &lt;span class=&#34;constructor&#34;&gt;CFAbsoluteTimeGetCurrent()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = &lt;span class=&#34;constructor&#34;&gt;CFHostStartInfoResolution(&lt;span class=&#34;params&#34;&gt;hostRef&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;kCFHostAddresses&lt;/span&gt;, NULL)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (result&lt;span class=&#34;operator&#34;&gt; == &lt;/span&gt;TRUE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addresses = &lt;span class=&#34;constructor&#34;&gt;CFHostGetAddressing(&lt;span class=&#34;params&#34;&gt;hostRef&lt;/span&gt;, &amp;amp;&lt;span class=&#34;params&#34;&gt;result&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bResolved = result&lt;span class=&#34;operator&#34;&gt; == &lt;/span&gt;TRUE ? &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; : &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(bResolved)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; sockaddr_in* remoteAddr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;constructor&#34;&gt;CFArrayGetCount(&lt;span class=&#34;params&#34;&gt;addresses&lt;/span&gt;)&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CFDataRef saData = (CFDataRef)&lt;span class=&#34;constructor&#34;&gt;CFArrayGetValueAtIndex(&lt;span class=&#34;params&#34;&gt;addresses&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        remoteAddr = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; sockaddr_in*)&lt;span class=&#34;constructor&#34;&gt;CFDataGetBytePtr(&lt;span class=&#34;params&#34;&gt;saData&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(remoteAddr != NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;//获取IP地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;char&lt;/span&gt; ip&lt;span class=&#34;literal&#34;&gt;[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            strcpy(ip, inet&lt;span class=&#34;constructor&#34;&gt;_ntoa(&lt;span class=&#34;params&#34;&gt;remoteAddr&lt;/span&gt;-&amp;gt;&lt;span class=&#34;params&#34;&gt;sin_addr&lt;/span&gt;)&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            NSString&lt;span class=&#34;operator&#34;&gt; * &lt;/span&gt;ipStr = &lt;span class=&#34;literal&#34;&gt;[NSS&lt;span class=&#34;identifier&#34;&gt;tring&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;stringWithCString&lt;/span&gt;:&lt;span class=&#34;identifier&#34;&gt;ip&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;encoding&lt;/span&gt;:NSUTF8S&lt;span class=&#34;identifier&#34;&gt;tringEncoding&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;literal&#34;&gt;[&lt;span class=&#34;identifier&#34;&gt;ipsArr&lt;/span&gt; &lt;span class=&#34;identifier&#34;&gt;addObject&lt;/span&gt;:&lt;span class=&#34;identifier&#34;&gt;ipStr&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CFAbsoluteTime &lt;span class=&#34;keyword&#34;&gt;end&lt;/span&gt; = &lt;span class=&#34;constructor&#34;&gt;CFAbsoluteTimeGetCurrent()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;constructor&#34;&gt;NSLog(@&lt;span class=&#34;string&#34;&gt;&amp;quot;33333 === ip === %@ === time cost: %0.3fs&amp;quot;&lt;/span&gt;, &lt;span class=&#34;params&#34;&gt;ipsArr&lt;/span&gt;,&lt;span class=&#34;params&#34;&gt;end&lt;/span&gt; - &lt;span class=&#34;params&#34;&gt;start&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;constructor&#34;&gt;CFRelease(&lt;span class=&#34;params&#34;&gt;hostNameRef&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;constructor&#34;&gt;CFRelease(&lt;span class=&#34;params&#34;&gt;hostRef&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&#34;参数解析-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数解析-3&#34;&gt;#&lt;/a&gt; 参数解析：&lt;/h6&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/&lt;span class=&#34;emphasis&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;  CFHostStartInfoResolution()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*  Discussion:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;	Performs a lookup for the given host.  It will search for the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	requested information if there is no other active request.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	Previously cached information of the given type will be released.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*  Mac OS X threading:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;	Thread safe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*  Parameters:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	theHost:  //需要被解决的CFHostRef的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	  The CFHostRef which should be resolved. Must be non-NULL. If&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	  this reference is not a valid CFHostRef, the behavior is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	  undefined.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*	info: 返回值的类型 数组/Data/string..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;	  The enum representing the type of information to be retrieved.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	  If the value is not a valid type, the behavior is undefined.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*	error: 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;	  A reference to a CFStreamError structure which will be filled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	  with any error information should an error occur.  May be set&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	  to NULL if error information is not wanted.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*  Result: 解析结果成功还是失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt; *&lt;/span&gt;	Returns TRUE on success and FALSE on failure.  In asynchronous&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	mode, this function will return immediately.  In synchronous&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	mode, it will block until the resolve has completed or until the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;	resolve is cancelled.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt; *&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;emphasis&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt;CFN_EXPORT &lt;span class=&#34;strong&#34;&gt;__nullable CFArrayRef&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;strong&#34;&gt;&lt;span class=&#34;emphasis&#34;&gt;CFHostGetAddressing(CFHostRef theHost, Boolean * __&lt;/span&gt;nullable hasBeenResolved) CF_AVAILABLE(10_3, 2_0);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&#34;优点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点-2&#34;&gt;#&lt;/a&gt; 优点：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;在网络切换时候不会卡顿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;缺点-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺点-3&#34;&gt;#&lt;/a&gt; 缺点：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;在本地 DNS 被破坏的情况下会出现卡死的现象 (卡 30s)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h3&gt;
&lt;p&gt;以上三个方法除了第二个方法会在网络切换时候卡死不可用之外，其他两个方法都是可选择的，关于那个本地 LocalDns 破坏会卡死的问题看来是无法避免，不过开发者可以自行通过 ping 等方式来判断 LocalDns 的正确性，在被破坏的情况下使用 httpDns 来进行解析即可。具体的 demo 可以到&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3poYW5nbmluZ2hhby9Mb2NhbERucw==&#34;&gt;这里&lt;/span&gt;查看&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
