{
    "version": "https://jsonfeed.org/version/1",
    "title": "Molier • All posts by \"apple登录\" tag",
    "description": "iOS 开发 移动App 博客 杂谈 随笔 相册",
    "home_page_url": "https://oliverqueen.cn",
    "items": [
        {
            "id": "https://oliverqueen.cn/2022-05-26-Apple%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/",
            "url": "https://oliverqueen.cn/2022-05-26-Apple%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/",
            "title": "Apple登录流程详解",
            "date_published": "2022-05-26T02:53:20.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"1背景\"><a class=\"anchor\" href=\"#1背景\">#</a> 1：背景</h2>\n<p>2019 年苹果推出 苹果登录（Sign in with Apple）方式，要求 2020 年 4 月之后运行在 iOS13 及以上系统的 APP 如果使用第三方或社交登录服务（如 Facebook、谷歌、 Twitter、Linkedln 或亚马逊等），必须向用户提供 “以苹果账号登录” 服务的选项。其中苹果的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uY2RuanNvbi5jb20vdHZhMS5zaW5haW1nLmNuL2xhcmdlL2U2YzlkMjRlZ3kxaDJmempqd3d1YWoyMTY0MHA0NDRkLmpwZw==\">审核细则 4.8</span> 也明确的规定了这一点。</p>\n<p><img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2lmep99kij21ns0rkaba.jpg\" alt=\"\" /></p>\n<p><span id=\"more\"></span></p>\n<p>&lt;font color=&quot;#dd0000&quot;&gt; 不过需要注意的一点是腾讯系列的产品如果只是使用微信、QQ 登录并不算第三方登录，所以可以添加 AppleID 登录方式。&lt;/font&gt;&lt;br /&gt;</p>\n<p><img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2fzjjwwuaj21640p444d.jpg\" alt=\"\" /></p>\n<h2 id=\"2前置配置\"><a class=\"anchor\" href=\"#2前置配置\">#</a> 2：前置配置</h2>\n<h4 id=\"21-xcode工程配置\"><a class=\"anchor\" href=\"#21-xcode工程配置\">#</a> 2.1 Xcode 工程配置</h4>\n<p>选中工程 trager，在 capabilities 中添加 AppleID 登录的能力</p>\n<p><img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g28b5w8aj21960u0769.jpg\" alt=\"\" /></p>\n<h4 id=\"22-开发者账号配置\"><a class=\"anchor\" href=\"#22-开发者账号配置\">#</a> 2.2 开发者账号配置</h4>\n<p>基于授权码的后端验证方式需要此步骤，如果使用 JWT 验证方式则不依赖此步骤，不过建议按顺序看完多做了解。</p>\n<p>该步骤的最终目的是获取用于校验客户端身份的所需内容，其中包括以下三个内容</p>\n<ul>\n<li>\n<p>生成一个用于校验客户端身份的密钥文件</p>\n</li>\n<li>\n<p>获取 KeyID</p>\n</li>\n<li>\n<p>获取 iss（TeamID）</p>\n</li>\n</ul>\n<p>&lt;font color=&quot;#dd0000&quot;&gt; 注意：该步骤需要登录 Apple 开发者账号并对其进行功能的配置、开启、以及描述文件更新等操作，可能需要证书管理团队或者有相关权限的人员来处理，并由他们将对应信息输出 &lt;/font&gt;&lt;br /&gt;</p>\n<h5 id=\"步骤一能力开启\"><a class=\"anchor\" href=\"#步骤一能力开启\">#</a> <strong>步骤一：能力开启</strong></h5>\n<p>进入开发者账号，选择需要支持 AppleID 登录能力的应用并进入打开其 AppleID 登录的功能<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g335dozbj219o0kiwg6.jpg\" alt=\"\" /><br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g36gha89j216x0u0gnx.jpg\" alt=\"\" /></p>\n<h5 id=\"步骤二更新profile\"><a class=\"anchor\" href=\"#步骤二更新profile\">#</a> <strong>步骤二：更新 profile</strong></h5>\n<p>对 app 的任何更改都会导致现有的 profile 文件失效，所以需要重新生成 profile 描述文件。<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g38wg6kij20ia08qmxk.jpg\" alt=\"\" /><br />\n按照如下路径操作，点进已经 <code>invalid</code>  的描述文件并重新生成<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3em4u2oj21fq0lc75x.jpg\" alt=\"\" /></p>\n<h5 id=\"步骤三生成密钥文件\"><a class=\"anchor\" href=\"#步骤三生成密钥文件\">#</a> <strong>步骤三：生成密钥文件</strong></h5>\n<p>进入如下界面点击 <code>加号</code> 进行生成<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3hh2cz2j216m0ms406.jpg\" alt=\"\" /></p>\n<p>填完并勾选 <code>Sigin with apple</code>  后点击右侧的 <code>Configure</code>  进行配置，在配置页面选择需要开启苹果登录的 app 并保存，然后回到上一页并开始注册<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3kyolw0j21m10u043i.jpg\" alt=\"\" /><br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3ps0bfjj21v70u0td1.jpg\" alt=\"\" /><br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3qw6gvmj22120s0dkq.jpg\" alt=\"\" /></p>\n<p>最终注册成功后会有 KeyID、TeamID 和可供下载的密钥文件<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3umbtqzj21wg0s4gqg.jpg\" alt=\"\" /></p>\n<p>密钥文件格式为.p8 实际是文本文件<br />\n<img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g3yn74llj212g0badht.jpg\" alt=\"\" /></p>\n<p>&lt;font color=&quot;#dd0000&quot;&gt; 注意：密钥文件只能被下载一次，下载后保存在安全的地方，丢了的话只能重新申请了 &lt;/font&gt;&lt;br /&gt;</p>\n<h2 id=\"3登录流程\"><a class=\"anchor\" href=\"#3登录流程\">#</a> 3：登录流程</h2>\n<p>登录流程分两大块，一个是客户端部分，一个是后端部分，其中后端部分有两种校验方式 <code>基于授权码的后端验证</code> 、 <code>基于JWT的算法验证</code> ，稍后会一一讲解。总体流程如下图：</p>\n<p><img data-src=\"https://cdn.cdnjson.com/tva1.sinaimg.cn/large/e6c9d24egy1h2g4un5dizj20ve0u0dip.jpg\" alt=\"\" /></p>\n<h4 id=\"31-客户端侧\"><a class=\"anchor\" href=\"#31-客户端侧\">#</a> 3.1 客户端侧</h4>\n<h5 id=\"步骤一授权\"><a class=\"anchor\" href=\"#步骤一授权\">#</a> <strong>步骤一：授权</strong></h5>\n<p>对于客户端来说 AppleID 登录与传统的三方登录流程一样，分为 <code>调用接口</code> 与 <code>回调信息获取</code> 两步，唯一不同点是苹果登录的 API 是在 iOS SDK 内部封装，只用导入对应头文件即可<br />\n <code>#import &lt;AuthenticationServices/AuthenticationServices.h&gt; </code></p>\n<p>关于登录入口，苹果对 AppleID 登录的 UI 有严格的限制，因此专门提供了提供了一套继承于 <code>UIControl</code>  等控件来供开发者使用 <code>ASAuthorizationAppleIDButton</code></p>\n<p><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ASAuthorizationAppleIDButton * appleIDBtn = [ASAuthorizationAppleIDButton buttonWithType:ASAuthorizationAppleIDButtonTypeDefault style:ASAuthorizationAppleIDButtonStyleWhite];</span><br><span class=\"line\">appleIDBtn.frame = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>);</span><br><span class=\"line\">[appleIDBtn addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(didAppleIDBtnClicked) forControlEvents:<span class=\"built_in\">UIControlEventTouchUpInside</span>];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:appleIDBtn];</span><br></pre></td></tr></table></figure></p>\n<p>其中按钮的 <code>文案类型</code> 和 <code>UI风格</code> 可以通过枚举进行配置<br />\n <figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  文案类型</span><br><span class=\"line\">typedef <span class=\"type\">NS_ENUM</span>(<span class=\"type\">NSInteger</span>, <span class=\"type\">ASAuthorizationAppleIDButtonType</span>) &#123;</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonTypeSignIn</span>,</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonTypeContinue</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonTypeSignUp</span> <span class=\"type\">API_AVAILABLE</span>(ios(13.2), macos(10.15.1), tvos(13.1)) <span class=\"type\">API_UNAVAILABLE(watchos)</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonTypeDefault</span> = <span class=\"type\">ASAuthorizationAppleIDButtonTypeSignIn</span>,</span><br><span class=\"line\">&#125; <span class=\"type\">NS_SWIFT_NAME</span>(<span class=\"type\">ASAuthorizationAppleIDButton</span>.<span class=\"type\">ButtonType</span>) <span class=\"type\">API_AVAILABLE</span>(ios(13.0), macos(10.15), tvos(13.0)) <span class=\"type\">API_UNAVAILABLE</span>(watchos);</span><br><span class=\"line\"></span><br><span class=\"line\">//  <span class=\"type\">UI</span>风格</span><br><span class=\"line\">typedef <span class=\"type\">NS_ENUM</span>(<span class=\"type\">NSInteger</span>, <span class=\"type\">ASAuthorizationAppleIDButtonStyle</span>) &#123;</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonStyleWhite</span>,</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonStyleWhiteOutline</span>,</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDButtonStyleBlack</span>,</span><br><span class=\"line\">&#125; <span class=\"type\">NS_SWIFT_NAME</span>(<span class=\"type\">ASAuthorizationAppleIDButton</span>.<span class=\"type\">Style</span>) <span class=\"type\">API_AVAILABLE</span>(ios(13.0), macos(10.15), tvos(13.0)) <span class=\"type\">API_UNAVAILABLE</span>(watchos);</span><br></pre></td></tr></table></figure><br />\n 但是并不推荐这种方式使用，原因如下：</p>\n<ul>\n<li>1：固定 UI 无法满足业务的定制化需求</li>\n<li>2：文案固定，多语言配置需要在单独的地方去配置文案</li>\n</ul>\n<p>所以建议自己写 UI，直接在点击事件中调用 AppleID 的相关 API 进行授权登陆操作，具体代码为，其中 <code>ASAuthorizationAppleIDRequest</code>  为是否使用 Keychain 信息，如果如果 KeyChain 里面也有登录信息的话，可以直接使用里面保存的用户名和密码进行登录。可以根据实际业务需求来<br />\n <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">KINFO</span>(@<span class=\"string\">&quot;[AppleLoginWrapper]开始苹果登录鉴权&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">@available</span>(<span class=\"keyword\">iOS</span> <span class=\"number\">13.0</span>, <span class=\"operator\">*</span>)) &#123;</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDProvider</span> <span class=\"operator\">*</span>provider <span class=\"operator\">=</span> [<span class=\"type\">ASAuthorizationAppleIDProvider</span> new];</span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationAppleIDRequest</span> <span class=\"operator\">*</span>request <span class=\"operator\">=</span> [provider createRequest];</span><br><span class=\"line\">    request.requestedScopes <span class=\"operator\">=</span> @[ <span class=\"type\">ASAuthorizationScopeFullName</span>, <span class=\"type\">ASAuthorizationScopeEmail</span> ]; <span class=\"comment\">//请求的用户信息</span></span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationPasswordRequest</span> <span class=\"operator\">*</span> keychainRequest <span class=\"operator\">=</span> [[[<span class=\"type\">ASAuthorizationPasswordProvider</span> alloc] <span class=\"keyword\">init</span>] createRequest];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">ASAuthorizationController</span> <span class=\"operator\">*</span>vc <span class=\"operator\">=</span> [[<span class=\"type\">ASAuthorizationController</span> alloc] initWithAuthorizationRequests:@[ request ,keychainRequest]];</span><br><span class=\"line\">    vc.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span>;</span><br><span class=\"line\">    vc.presentationContextProvider <span class=\"operator\">=</span> <span class=\"keyword\">self</span>;</span><br><span class=\"line\">    [vc performRequests];</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Fallback on earlier versions</span></span><br><span class=\"line\">    <span class=\"type\">KINFO</span>(@<span class=\"string\">&quot;[AppleLoginWrapper]iOS系统低于13&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"步骤二信息回调\"><a class=\"anchor\" href=\"#步骤二信息回调\">#</a> <strong>步骤二：信息回调</strong></h5>\n<p>依赖的两个 delegate<br />\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> mark- 代理 ASAuthorizationControllerDelegate</span></span><br><span class=\"line\">- (<span class=\"type\">void</span>)authorizationController:(ASAuthorizationController *)controller didCompleteWithAuthorization:(ASAuthorization *)authorization &#123;</span><br><span class=\"line\">    <span class=\"comment\">//  成功</span></span><br><span class=\"line\">    <span class=\"comment\">//  其中`authorization.credential`包含了Token，用户ID等授权所需信息，可上报到后台</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (<span class=\"type\">void</span>)authorizationController:(ASAuthorizationController *)controller didCompleteWithError:(<span class=\"built_in\">NSError</span> *)error &#123;</span><br><span class=\"line\">    <span class=\"comment\">//  失败</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> mark- 代理ASAuthorizationControllerPresentationContextProviding</span></span><br><span class=\"line\">- (ASPresentationAnchor)presentationAnchorForAuthorizationController:(ASAuthorizationController *)controller &#123;</span><br><span class=\"line\">    <span class=\"comment\">//  展示在哪个Window上</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.view.window;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"步骤三用户id状态校验\"><a class=\"anchor\" href=\"#步骤三用户id状态校验\">#</a> <strong>步骤三：用户 ID 状态校验</strong></h5>\n<p>防止用户注销 AppleId 或 停止使用 Apple ID 的状态处理<br />\n <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">-</span> (<span class=\"type\">BOOL</span>)application:(<span class=\"type\">UIApplication</span> <span class=\"operator\">*</span>)application didFinishLaunchingWithOptions:(<span class=\"type\">NSDictionary</span> <span class=\"operator\">*</span>)launchOptions &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Override point for customization after application launch.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">@available</span>(<span class=\"keyword\">iOS</span> <span class=\"number\">13.0</span>, <span class=\"operator\">*</span>)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 注意 存储用户标识信息需要使用钥匙串来存储 这里使用NSUserDefaults 做的简单示例</span></span><br><span class=\"line\">        <span class=\"type\">NSString</span> <span class=\"operator\">*</span> userIdentifier <span class=\"operator\">=</span> [[<span class=\"type\">NSUserDefaults</span> standardUserDefaults] valueForKey:@<span class=\"string\">&quot;appleID&quot;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (userIdentifier) &#123;</span><br><span class=\"line\">            <span class=\"type\">ASAuthorizationAppleIDProvider</span> <span class=\"operator\">*</span> appleIDProvider <span class=\"operator\">=</span> [[<span class=\"type\">ASAuthorizationAppleIDProvider</span> alloc] <span class=\"keyword\">init</span>];</span><br><span class=\"line\">            [appleIDProvider getCredentialStateForUserID:userIdentifier</span><br><span class=\"line\">                                              completion:<span class=\"operator\">^</span>(<span class=\"type\">ASAuthorizationAppleIDProviderCredentialState</span> credentialState, <span class=\"type\">NSError</span> <span class=\"operator\">*</span> _Nullable error) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (credentialState) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"type\">ASAuthorizationAppleIDProviderCredentialAuthorized</span>:</span><br><span class=\"line\">                        <span class=\"comment\">// 授权状态有效</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"type\">ASAuthorizationAppleIDProviderCredentialRevoked</span>:</span><br><span class=\"line\">                        <span class=\"comment\">// 苹果账号登录的凭据已被移除，需解除绑定并重新引导用户使用苹果登录</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"type\">ASAuthorizationAppleIDProviderCredentialNotFound</span>:</span><br><span class=\"line\">                        <span class=\"comment\">// 未登录授权，直接弹出登录页面，引导用户登录</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"type\">ASAuthorizationAppleIDProviderCredentialTransferred</span>:</span><br><span class=\"line\">                        <span class=\"comment\">// 授权AppleID提供者凭据转移</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">YES</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"32-sever侧\"><a class=\"anchor\" href=\"#32-sever侧\">#</a> 3.2 Sever 侧</h4>\n<p>基于上面流程图，Sever 侧校验 Token 有效性的方式有两种：</p>\n<h5 id=\"方式一基于授权码的后端验证\"><a class=\"anchor\" href=\"#方式一基于授权码的后端验证\">#</a> <strong>方式一：基于授权码的后端验证</strong></h5>\n<p>后端在收到客户端传递的包含 token 的信息后进行验证</p>\n<ul>\n<li>构建 client_secret<br />\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-----BEGIN PRIVATE KEY-----</span><br><span class=\"line\">BASE64编码后的密钥 (步骤<span class=\"number\">2.2</span>中获得)</span><br><span class=\"line\">-----END PRIVATE KEY-----</span><br><span class=\"line\"> </span><br><span class=\"line\">public  byte<span class=\"literal\">[]</span> read<span class=\"constructor\">Key()</span> throws Exception &#123;</span><br><span class=\"line\">    String temp = <span class=\"string\">&quot;密钥文件中间的编码字符串&quot;</span>;</span><br><span class=\"line\">    return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Base64</span>.</span></span>decode<span class=\"constructor\">Base64(<span class=\"params\">temp</span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">构建client_secret关键代码：</span><br><span class=\"line\"></span><br><span class=\"line\">String client_id = <span class=\"string\">&quot;...&quot;</span>; <span class=\"comment\">// 被授权的APP ID(步骤2.2中获得)</span></span><br><span class=\"line\">Map&lt;String, Object&gt; header = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;<span class=\"literal\">()</span>;</span><br><span class=\"line\">header.put(<span class=\"string\">&quot;kid&quot;</span>, <span class=\"string\">&quot;密钥id&quot;</span>); <span class=\"comment\">// 参考后台配置(步骤2.2中获得)</span></span><br><span class=\"line\">Map&lt;String, Object&gt; claims = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;<span class=\"literal\">()</span>;</span><br><span class=\"line\">claims.put(<span class=\"string\">&quot;iss&quot;</span>, <span class=\"string\">&quot;team id&quot;</span>); <span class=\"comment\">// 参考后台配置 team id(步骤2.2中获得)</span></span><br><span class=\"line\">long now = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">System</span>.</span></span>current<span class=\"constructor\">TimeMillis()</span><span class=\"operator\"> / </span><span class=\"number\">1000</span>;</span><br><span class=\"line\">claims.put(<span class=\"string\">&quot;iat&quot;</span>, now);</span><br><span class=\"line\">claims.put(<span class=\"string\">&quot;exp&quot;</span>, now + <span class=\"number\">86400</span><span class=\"operator\"> * </span><span class=\"number\">30</span>); <span class=\"comment\">// 最长半年，单位秒</span></span><br><span class=\"line\">claims.put(<span class=\"string\">&quot;aud&quot;</span>, <span class=\"string\">&quot;https://appleid.apple.com&quot;</span>); <span class=\"comment\">// 默认值</span></span><br><span class=\"line\">claims.put(<span class=\"string\">&quot;sub&quot;</span>, client_id);</span><br><span class=\"line\">PKCS8EncodedKeySpec pkcs8EncodedKeySpec = <span class=\"keyword\">new</span> <span class=\"constructor\">PKCS8EncodedKeySpec(<span class=\"params\">readKey</span>()</span>);</span><br><span class=\"line\">KeyFactory keyFactory = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">KeyFactory</span>.</span></span>get<span class=\"constructor\">Instance(<span class=\"string\">&quot;EC&quot;</span>)</span>;</span><br><span class=\"line\">PrivateKey privateKey = keyFactory.generate<span class=\"constructor\">Private(<span class=\"params\">pkcs8EncodedKeySpec</span>)</span>;</span><br><span class=\"line\">String client_secret = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Jwts</span>.</span></span>builder<span class=\"literal\">()</span>.set<span class=\"constructor\">Header(<span class=\"params\">header</span>)</span>.set<span class=\"constructor\">Claims(<span class=\"params\">claims</span>)</span>.sign<span class=\"constructor\">With(SignatureAlgorithm.ES256, <span class=\"params\">privateKey</span>)</span>.compact<span class=\"literal\">()</span>;       </span><br></pre></td></tr></table></figure></li>\n<li>验证客户端 Token<br />\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span> <span class=\"built_in\">url</span> = <span class=\"string\">&quot;https://appleid.apple.com/auth/token&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// POST 请求</span></span><br><span class=\"line\">HttpSynClient client = <span class=\"keyword\">new</span> HttpSynClient(<span class=\"number\">5000</span>, <span class=\"number\">5000</span>, <span class=\"number\">5000</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; form = <span class=\"keyword\">new</span> HashMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">form.put(<span class=\"string\">&quot;client_id&quot;</span>, client_id);</span><br><span class=\"line\">form.put(<span class=\"string\">&quot;client_secret&quot;</span>, client_secret);</span><br><span class=\"line\">form.put(<span class=\"string\">&quot;code&quot;</span>, code);form.put(<span class=\"string\">&quot;grant_type&quot;</span>,<span class=\"string\">&quot;authorization_code&quot;</span>);</span><br><span class=\"line\">form.put(<span class=\"string\">&quot;redirect_uri&quot;</span>, redirectUrl);</span><br><span class=\"line\">HttpResponse result = client.excutePost(<span class=\"built_in\">url</span>, form);</span><br><span class=\"line\">System.out.println(result);</span><br></pre></td></tr></table></figure></li>\n<li>上述步骤结束后即可将结果回调给客户端，进行登录或者是错误处理\n<ul>\n<li>成功示例<br />\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;access_token&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;a0996b16cfb674c0eb0d29194c880455b.0.nsww.5fi5MVC-i3AVNhddrNg7Qw&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;token_type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;Bearer&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;expires_in&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">3600</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;refresh_token&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;r9ee922f1c8b048208037f78cd7dfc91a.0.nsww.KlV2TeFlTr7YDdZ0KtvEQQ&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;id_token&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;eyJraWQiOiJBSURPUEsxIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJodHRwczovL2FwcGxlaWQuYXBwbGUuY29tIiwiYXVkIjoiY29tLnNreW1pbmcuYXBwbGVsb2dpbmRlbW8iLCJleHAiOjE1NjU2NjU1OTQsImlhdCI6MTU2NTY2NDk5NCwic3ViIjoiMDAwMjY2LmRiZTg2NWIwYWE3MjRlMWM4ODM5MDIwOWI5YzdkNjk1LjAyNTYiLCJhdF9oYXNoIjoiR0ZmODhlX1ptc0pqQ2VkZzJXem85ZyIsImF1dGhfdGltZSI6MTU2NTY2NDk2M30.J6XFWmbr0a1hkJszAKM2wevJF57yZt-MoyZNI9QF76dHfJvAmFO9_RP9-tz4pN4ua3BuSJpUbwzT2xFD_rBjsNWkU-ZhuSAONdAnCtK2Vbc2AYEH9n7lB2PnOE1mX5HwY-dI9dqS9AdU4S_CjzTGnvFqC9H5pt6LVoCF4N9dFfQnh2w7jQrjTic_JvbgJT5m7vLzRx-eRnlxQIifEsHDbudzi3yg7XC9OL9QBiTyHdCQvRdsyRLrewJT6QZmi6kEWrV9E21WPC6qJMsaIfGik44UgPOnNnjdxKPzxUAa-Lo1HAzvHcAX5i047T01ltqvHbtsJEZxAB6okmwco78JQA&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>失败示例<br />\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;error&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;invalid_client&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"方式二基于jwt验证原理\"><a class=\"anchor\" href=\"#方式二基于jwt验证原理\">#</a> <strong>方式二：基于 JWT 验证原理</strong></h5>\n<ul>\n<li>\n<p>获取苹果公钥，并保存</p>\n<p>用到公钥接口  <code>https://appleid.apple.com/auth/keys</code> <br />\n 返回值样例<br />\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">    <span class=\"string\">&quot;keys&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;kty&quot;</span>: <span class=\"string\">&quot;RSA&quot;</span>, </span><br><span class=\"line\">        <span class=\"string\">&quot;kid&quot;</span>: <span class=\"string\">&quot;AIDOPK1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;use&quot;</span>: <span class=\"string\">&quot;sig&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;alg&quot;</span>: <span class=\"string\">&quot;RS256&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;n&quot;</span>: <span class=\"string\">&quot;lxrwmuYSAsTfn-lUu4goZSXBD9ackM9OJuwUVQHmbZo6GW4Fu_auUdN5zI7Y1dEDfgt7m7QXWbHuMD01HLnD4eRtY-RNwCWdjNfEaY_esUPY3OVMrNDI15Ns13xspWS3q-13kdGv9jHI28P87RvMpjz_JCpQ5IM44oSyRnYtVJO-320SB8E2Bw92pmrenbp67KRUzTEVfGU4-obP5RZ09OxvCr1io4KJvEOjDJuuoClF66AT72WymtoMdwzUmhINjR0XSqK6H0MdWsjw7ysyd_JhmqX5CAaT9Pgi0J8lU_pcl215oANqjy7Ob-VMhug9eGyxAWVfu_1u6QJKePlE-w&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;e&quot;</span>: <span class=\"string\">&quot;AQAB&quot;</span></span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>验证客户端的 Token 有效性</p>\n<p>客户端会传以下几个值给服务端</p>\n<ul>\n<li>\n<p>userID：授权的用户唯一标识</p>\n</li>\n<li>\n<p>email、fullName：授权的用户资料</p>\n</li>\n<li>\n<p>authorizationCode：授权 code</p>\n</li>\n<li>\n<p>identityToken：授权用户的 JWT 凭证<br />\n示例 identityToken：授权用户的 JWT 凭证<br />\n <figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJraWQiOiJBSURPUEsxIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJodHRwczovL2FwcGxlaWQuYXBwbGUuY29tIiwiYXVkIjoiY29tLmZ1bi5BcHBsZUxvZ2luIiwiZXhwIjoxNTY4NzIxNzY5LCJpYXQiOjE1Njg3MjExNjksInN1YiI6IjAwMDU4MC4wODdjNTU0ZGNlMzU0NjZmYTg1YzVhNWQ1OTRkNTI4YS4wODAxIiwiY19oYXNoIjoiel9KY0RscFczQjJwN3ExR0Nna1JaUSIsImF1dGhfdGltZSI6MTU2ODcyMTE2OX0.WmSa4LzOzYsdwTqAJ_8mub4Ls3eyFkxZoGLoy-U7DatsTd_JEwAs3_OtV4ucmj6ENT3153iCpYY6vBxSQromOMcXsN74IrUQew24y_zflN2g4yU8ZVvBCbTrR_6p9f2fbeWjZiyNcbPCha0dv45E3vBjyHhmffWnk3vyndBBiwwuqod4pyCZ3UECf6Vu-o7dygKFpMHPS1ma60fEswY5d-_TJAFk1HaiOfFo0XbL6kwqAGvx8HnraIxyd0n8SbBVxV_KDxf15hdotUizJDW7N2XMdOGQpNFJim9SrEeBhn9741LWqkWCgkobcvYBZsrvnUW6jZ87SLi15rvIpq8_fw</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br />\ntoken 被解密后分为三个部分</p>\n</li>\n<li>\n<p>header: 包括了 key id 与加密算法</p>\n</li>\n<li>\n<p>payload:</p>\n<ul>\n<li>iss: 签发机构，苹果</li>\n<li>aud: 接收者，目标 app</li>\n<li>exp：过期时间</li>\n<li>iat: 签发时间</li>\n<li>sub: 用户 id</li>\n<li>c_hash: 一个哈希数列</li>\n<li>auth_time: 签名时间</li>\n</ul>\n</li>\n<li>\n<p>signature: 用于验证 JWT 的签名</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Token 验证原理：</p>\n<p>因为 idnetityToken 使用非对称加密 RSASSA【RSA 签名算法】 和 ECDSA【椭圆曲线数据签名算法】，当验证签名的时候，利用公钥来解密 Singature，当解密内容与 base64UrlEncode (header) + “.” + base64UrlEncode (payload) 的内容完全一样的时候，表示验证通过。</p>\n</li>\n<li>\n<p>防止中间人攻击原理：</p>\n<p>该 token 是苹果利用私钥生成的一段 JWT，并给出公钥我们对 token 进行验证，由于中间人并没有苹果的私钥，所以它生成出来的 token 是没有办法利用苹果给出的公钥进行验证的，确保的 token 的安全性。</p>\n</li>\n</ul>\n<h2 id=\"4-总结\"><a class=\"anchor\" href=\"#4-总结\">#</a> 4 总结</h2>\n<p>目前使用的是基于授权码的后端验证方式，每次收到客户端登录请求后都会像苹果服务器发送 post 请求来验证，导致受网络影响较大。如果改成第一种方式后，除了获取公钥外不再依赖网络请求，可降低网络异常情况带来的损失。但是服务端要定期刷新公钥，防止公钥变化带来的验证失败</p>\n<h2 id=\"5-参考文档\"><a class=\"anchor\" href=\"#5-参考文档\">#</a> 5 参考文档</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIub2t0YS5jb20vYmxvZy8yMDE5LzA2LzA0L3doYXQtdGhlLWhlY2staXMtc2lnbi1pbi13aXRoLWFwcGxl\">https://developer.okta.com/blog/2019/06/04/what-the-heck-is-sign-in-with-apple</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2NuL3NpZ24taW4td2l0aC1hcHBsZS8=\">https://developer.apple.com/cn/sign-in-with-apple/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vc2lnbmlud2l0aGFwcGxlcmVzdGFwaS9nZW5lcmF0ZV9hbmRfdmFsaWRhdGVfdG9rZW5z\">https://developer.apple.com/documentation/signinwithapplerestapi/generate_and_validate_tokens</span></p>\n",
            "tags": [
                "iOS",
                "Apple登录"
            ]
        }
    ]
}