{
    "version": "https://jsonfeed.org/version/1",
    "title": "Molier • All posts by \"opengl\" tag",
    "description": "iOS 开发 移动App 博客 杂谈 随笔 相册",
    "home_page_url": "https://oliverqueen.cn",
    "items": [
        {
            "id": "https://oliverqueen.cn/2018-01-23-iOS%E4%B8%AD%E4%BD%BF%E7%94%A8OpenGL%E5%AE%9E%E7%8E%B0%E5%A2%9E%E9%AB%98%E5%8A%9F%E8%83%BD/",
            "url": "https://oliverqueen.cn/2018-01-23-iOS%E4%B8%AD%E4%BD%BF%E7%94%A8OpenGL%E5%AE%9E%E7%8E%B0%E5%A2%9E%E9%AB%98%E5%8A%9F%E8%83%BD/",
            "title": "iOS中使用OpenGL实现增高功能",
            "date_published": "2018-01-23T13:23:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"功能效果\"><a class=\"anchor\" href=\"#功能效果\">#</a> 功能效果</h3>\n<p><img data-src=\"https://cdn.cdnjson.com/tvax3.sinaimg.cn/large/006tNc79gy1fo6lpd4q64g308u0fqnpe.gif\" alt=\"demo示例\" /><br />\n<span id=\"more\"></span></p>\n<h3 id=\"功能分析\"><a class=\"anchor\" href=\"#功能分析\">#</a> 功能分析</h3>\n<ul>\n<li>\n<p>功能：渲染一张传入的图片 -&gt; 手动选择编辑区域 -&gt; 通过滑块来编辑区域的增高或者缩短</p>\n</li>\n<li>\n<p>OpenGL 原理：</p>\n<ul>\n<li>\n<p>因为 OpenGL 只能绘制三角形，所以在处理图像或者图形的时候我们需要将被处理的对象用三角行来分割转换为三角形和顶点的组成的对象。</p>\n</li>\n<li>\n<p>OpenGL 里面坐标是以左下角为原点 X 轴向上为正，Y 轴向右为正</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"功能实现\"><a class=\"anchor\" href=\"#功能实现\">#</a> 功能实现</h3>\n<ul>\n<li>渲染图片拆分图片：\n<ul>\n<li>拆分方法 1：通过图形看出是一个矩形，而矩形是可以分成两个三角形和四个顶点，通过此可以用 GL 渲染出图片。</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.cdnjson.com/tvax3.sinaimg.cn/large/006tNc79gy1fo6lpjw6g3j30dw0ee7ft.jpg\" alt=\"拆分三角形\" /></p>\n<p>这样拆分之后虽然可以正常渲染，但是带来的问题是我的四个顶点都是死的，也就是四个顶点必须是画布的四个顶点，改变顶点的坐标后只能导致整张画布的变动，而不是某一个区域的变动，拉伸的话也是整张图片的拉伸，所以想要实现局部处理的话这种分割方式不可行。</p>\n<ul>\n<li>拆分方法 2：将整张图片先拆分为三个矩形，然后再把每个矩形拆分成两个三角形，得到 6 个三角形，8 个顶点，如下图：</li>\n</ul>\n<p><img data-src=\"https://cdn.cdnjson.com/tvax3.sinaimg.cn/large/006tNc79gy1fo6lprpvrrj30dw0eddrh.jpg\" alt=\"拆分2\" /></p>\n<p>这样一来就可以保证中间的矩形的高度可以任意变化而上下两部分的高度不变只改变位置，也就是说我们这个 DEMO 中所做的任何拉伸操作都是对中间矩形的操作，换而言之就是改变最上面的矩形和最下面的矩形之间的距离来达到对中间区域的拉伸和压缩的目的。根据拆分的方式我们用顶点的坐标创建一个数组<br />\n <figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span>顶点数组</span><br><span class=\"line\">GLfloat vertices[] = &#123;   </span><br><span class=\"line\">    -1.2, -1.2,     <span class=\"string\">//</span>左下</span><br><span class=\"line\">    1.2, -1.2,      <span class=\"string\">//</span>右下</span><br><span class=\"line\">    -1.2, -0.4,     <span class=\"string\">//</span>小矩形左下</span><br><span class=\"line\">    1.2, -0.4,      <span class=\"string\">//</span>小矩形右下</span><br><span class=\"line\">    -1.2,  0.4,     <span class=\"string\">//</span>小矩形左上</span><br><span class=\"line\">    1.2,  0.4,      <span class=\"string\">//</span>小矩形右上</span><br><span class=\"line\">    -1.2,  1.2,     <span class=\"string\">//</span>左上</span><br><span class=\"line\">    1.2,  1.2,      <span class=\"string\">//</span>右上</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">//</span>填充纹理的数组</span><br><span class=\"line\">GLfloat texCoords[] = &#123;     </span><br><span class=\"line\">    0, 0,        <span class=\"string\">//</span>左下                  <span class=\"string\">//</span>下标为 0 1</span><br><span class=\"line\">    1, 0,        <span class=\"string\">//</span>右下                  <span class=\"string\">//</span>下标为2 3</span><br><span class=\"line\">    0, 1.0/3.0,  <span class=\"string\">//</span>小矩形左下             <span class=\"string\">//</span>下标为4 5</span><br><span class=\"line\">    1, 1.0/3.0,  <span class=\"string\">//</span>小矩形右下             <span class=\"string\">//</span>下标为6 7</span><br><span class=\"line\">    0, 2.0/3.0,  <span class=\"string\">//</span>小矩形左上角           <span class=\"string\">//</span>下标为8 9</span><br><span class=\"line\">    1, 2.0/3.0,  <span class=\"string\">//</span>小矩形右上角           <span class=\"string\">//</span>下标为10 11</span><br><span class=\"line\">    0, 1,        <span class=\"string\">//</span>左上                  <span class=\"string\">//</span>下标为12 13</span><br><span class=\"line\">    1, 1,        <span class=\"string\">//</span>右上                  <span class=\"string\">//</span>下标为14 15</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>手动选择区域：通过添加带有自定义手势的 UIView 来实现拖动修改选择区域。</li>\n</ul>\n<p><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*****************CustomPanView代码******************</span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">CustomPanViewDelegate</span> &lt;<span class=\"title\">NSObject</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  开始拖拽</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @param customPanView 自身</span></span><br><span class=\"line\"><span class=\"comment\"> *  @param centerY       自身所在的y坐标</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">- (<span class=\"type\">void</span>)beginDragWithCoustomPanView:(<span class=\"built_in\">UIView</span> *)customPanView centerY:(<span class=\"built_in\">CGFloat</span>)centerY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">CustomPanView</span> : <span class=\"title\">UIView</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>, <span class=\"keyword\">assign</span>) <span class=\"type\">id</span>&lt;CustomPanViewDelegate&gt; delegate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*****************CustomPanViewDelegate代码******************</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> mark -</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> mark 拖拽View的代理方法</span></span><br><span class=\"line\">-(<span class=\"type\">void</span>)beginDragWithCoustomPanView:(<span class=\"built_in\">UIView</span> *)customPanView centerY:(<span class=\"built_in\">CGFloat</span>)centerY &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 限制范围：裁剪区不能大于图片区域</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (customPanView.center.y &gt;= imageBottom) &#123;</span><br><span class=\"line\">        customPanView.center = <span class=\"built_in\">CGPointMake</span>(customPanView.center.x, imageBottom);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (customPanView.center.y &lt;= imageTop) &#123;</span><br><span class=\"line\">        customPanView.center = <span class=\"built_in\">CGPointMake</span>(customPanView.center.x, imageTop);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//    获取两条线的坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">CGFloat</span> topY = _topView.center.y;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">CGFloat</span> bottomY = _bottomView.center.y;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//    根据两条线的坐标刷新裁剪区域UI</span></span><br><span class=\"line\">    [_cutLabel setFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, topY &lt; bottomY ? topY : bottomY, SCREEN_WIDTH, fabs(bottomY - topY))];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//    算出裁剪起始坐标和结束坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">CGFloat</span> fromPoint = topY &lt; bottomY ? (imageBottom - bottomY) / imageHeight : (imageBottom - topY) / imageHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">CGFloat</span> toPoint = topY &lt; bottomY ? (imageBottom - topY) / imageHeight : (imageBottom - bottomY) / imageHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//将中间的矩形的顶点坐标和坐标联系裁剪区域联系起来。</span></span><br><span class=\"line\">    [<span class=\"keyword\">self</span> sendFromePoint:fromPoint endPoint:toPoint];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_cutLabel.frame.size.height &lt; <span class=\"number\">30</span>) &#123;  <span class=\"comment\">//隐藏文字</span></span><br><span class=\"line\">        _cutLabel.text = <span class=\"string\">@&quot;&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        _cutLabel.text = <span class=\"string\">@&quot;编辑区域&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.slider setValue:<span class=\"number\">0.0</span> animated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    tmpHeight = <span class=\"number\">0.0</span>f;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br />\n 使用一个 Delegate 将拖移后的 Y 坐标返回，因为是竖直运动的所以我们只关心 Y 轴坐标。</p>\n<ul>\n<li>改变大小：通过将 UISliderBar 的 ValueChange 和顶点坐标关联来实现改变顶点坐标，之后调用 GLKView 的 display 的方法来刷新 UI，将变化的过程展现出来。</li>\n</ul>\n<p><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)action:(UISlider *)sender &#123;</span><br><span class=\"line\">    <span class=\"regexp\">//</span>判断是否是向右滑动</span><br><span class=\"line\">    isRightDirection = sender.value &gt;= judgeDirection ? YES : NO;</span><br><span class=\"line\">    <span class=\"regexp\">//</span>所改变的高度</span><br><span class=\"line\">    changeHeight = sender.value - tmpHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"regexp\">//</span>遍历数组</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (int i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i ++) &#123;</span><br><span class=\"line\">        <span class=\"regexp\">//</span>将Y坐标筛选出来</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"regexp\">//</span>下半部分矩形</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt;= <span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">                <span class=\"regexp\">//</span>下半部分矩形Y轴做减法减去变化的高度</span><br><span class=\"line\">                vertices[i] = verticesCopy[i] - changeHeight;</span><br><span class=\"line\">                <span class=\"regexp\">//</span>上半部分矩形</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">                <span class=\"regexp\">//</span>上半部分矩形Y轴做加法加上变化的高度</span><br><span class=\"line\">                vertices[i] = verticesCopy[i] + changeHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"regexp\">//</span>缩小时候如果编辑区域已经成为一条线了就不能在缩小了</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (vertices[<span class=\"number\">11</span>] &gt; vertices[<span class=\"number\">7</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        [self.glView display];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>通过 glReadPixels 来从内存中读取像素数据，GLubyte -&gt; CGImageRef -&gt; UIimage 然后最相关的保存或者其他操作。</li>\n</ul>\n<p><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#pragma mark -</span><br><span class=\"line\">#pragma mark 获取处理后的图片</span><br><span class=\"line\">- (UIImage *) createImage &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">int</span> imageY = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">int</span> imgHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isRightDirection) &#123; <span class=\"comment\">// 判断slider滑动方向</span></span><br><span class=\"line\"></span><br><span class=\"line\">        imageY = fabs(imageTop - fabs(changeHeight<span class=\"operator\"> * </span>perOpengleseCoordinate))<span class=\"operator\"> * </span>screenScale;</span><br><span class=\"line\"></span><br><span class=\"line\">        imgHeight = fabs(imageHeight + <span class=\"number\">2</span><span class=\"operator\"> * </span>fabs(changeHeight<span class=\"operator\"> * </span>perOpengleseCoordinate))<span class=\"operator\"> * </span>screenScale;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        imageY = fabs(imageTop + fabs(changeHeight<span class=\"operator\"> * </span>perOpengleseCoordinate))<span class=\"operator\"> * </span>screenScale;</span><br><span class=\"line\"></span><br><span class=\"line\">        imgHeight = fabs(imageHeight - <span class=\"number\">2</span><span class=\"operator\"> * </span>fabs(changeHeight<span class=\"operator\"> * </span>perOpengleseCoordinate))<span class=\"operator\"> * </span>screenScale;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">int</span> imageWidth = SCREEN_WIDTH<span class=\"operator\"> * </span>screenScale;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">int</span> dataLength = imageWidth<span class=\"operator\"> * </span>imgHeight<span class=\"operator\"> * </span><span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    GLubyte *data = (GLubyte*)malloc(dataLength<span class=\"operator\"> * </span>sizeof(GLubyte));</span><br><span class=\"line\"></span><br><span class=\"line\">    gl<span class=\"constructor\">PixelStorei(GL_PACK_ALIGNMENT, 4)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    gl<span class=\"constructor\">ReadPixels(0, <span class=\"params\">imageY</span>, <span class=\"params\">imageWidth</span>, <span class=\"params\">imgHeight</span>, GL_RGBA, GL_UNSIGNED_BYTE, <span class=\"params\">data</span>)</span>;  <span class=\"comment\">//从内存中读取像素</span></span><br><span class=\"line\">    CGDataProviderRef <span class=\"built_in\">ref</span> = <span class=\"constructor\">CGDataProviderCreateWithData(NULL, <span class=\"params\">data</span>, <span class=\"params\">dataLength</span>, NULL)</span>;</span><br><span class=\"line\">    CGColorSpaceRef colorspace = <span class=\"constructor\">CGColorSpaceCreateDeviceRGB()</span>;</span><br><span class=\"line\">    CGImageRef iref = <span class=\"constructor\">CGImageCreate(<span class=\"params\">imageWidth</span>, <span class=\"params\">imgHeight</span>, 8, 32, <span class=\"params\">imageWidth</span> <span class=\"operator\">*</span> 4, <span class=\"params\">colorspace</span>, <span class=\"params\">kCGBitmapByteOrder32Big</span> | <span class=\"params\">kCGImageAlphaPremultipliedLast</span>,<span class=\"params\">ref</span>, NULL, <span class=\"params\">true</span>, <span class=\"params\">kCGRenderingIntentDefault</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"constructor\">UIGraphicsBeginImageContext(CGSizeMake(<span class=\"params\">imageWidth</span>, <span class=\"params\">imgHeight</span>)</span>);</span><br><span class=\"line\">    CGContextRef cgcontext = <span class=\"constructor\">UIGraphicsGetCurrentContext()</span>;</span><br><span class=\"line\">    <span class=\"constructor\">CGContextSetBlendMode(<span class=\"params\">cgcontext</span>, <span class=\"params\">kCGBlendModeCopy</span>)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">CGContextDrawImage(<span class=\"params\">cgcontext</span>, CGRectMake(0, 0, <span class=\"params\">imageWidth</span>, <span class=\"params\">imgHeight</span>)</span>, iref);</span><br><span class=\"line\"></span><br><span class=\"line\">    CGImageRef imageMasked = <span class=\"constructor\">CGBitmapContextCreateImage(<span class=\"params\">cgcontext</span>)</span>;</span><br><span class=\"line\">    UIImage<span class=\"operator\"> * </span>image = <span class=\"literal\">[UII<span class=\"identifier\">mage</span> <span class=\"identifier\">imageWithCGImage</span>:<span class=\"identifier\">imageMasked</span> <span class=\"identifier\">scale</span>:<span class=\"identifier\">screenScale</span> <span class=\"identifier\">orientation</span>:UII<span class=\"identifier\">mageOrientationUp</span>]</span>;</span><br><span class=\"line\">    <span class=\"constructor\">UIGraphicsEndImageContext()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    free(data);</span><br><span class=\"line\">    <span class=\"constructor\">CFRelease(<span class=\"params\">ref</span>)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">CFRelease(<span class=\"params\">colorspace</span>)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">CGImageRelease(<span class=\"params\">iref</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    return image;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "底层",
                "OpenGL",
                "UI"
            ]
        }
    ]
}